{
  "Solver": "clingo version 4.5.0",
  "Input": [
    "-","meta.lp","metaD.lp","metaO.lp","metaS.lp"
  ],
  "Call": [
    {
      "Witnesses": [
        {
          "Value": [
            "__concept", "param(\"width\",10)", "__level_design(sprite((1,0),wall))", "__level_design(sprite((2,0),wall))", "__level_design(sprite((8,0),wall))", "__level_design(sprite((9,0),wall))", "__level_design(sprite((1,1),wall))", "__level_design(sprite((2,1),wall))", "__level_design(sprite((5,1),altar))", "__level_design(sprite((8,1),wall))", "__level_design(sprite((9,1),wall))", "__level_design(sprite((1,2),trap))", "__level_design(sprite((2,2),trap))", "__level_design(sprite((7,2),wall))", "__level_design(sprite((8,2),wall))", "__level_design(sprite((9,2),wall))", "__level_design(sprite((0,3),wall))", "__level_design(sprite((1,3),wall))", "__level_design(sprite((2,3),wall))", "__level_design(sprite((3,3),wall))", "__level_design(sprite((4,3),wall))", "__level_design(sprite((6,3),wall))", "__level_design(sprite((7,3),wall))", "__level_design(sprite((0,4),wall))", "__level_design(sprite((1,4),wall))", "__level_design(sprite((2,4),wall))", "__level_design(sprite((3,4),wall))", "__level_design(sprite((4,4),wall))", "__level_design(sprite((6,4),wall))", "__level_design(sprite((7,4),wall))", "__level_design(sprite((0,5),wall))", "__level_design(sprite((1,5),wall))", "__level_design(sprite((2,5),wall))", "__level_design(sprite((3,5),wall))", "__level_design(sprite((4,5),wall))", "__level_design(sprite((0,6),wall))", "__level_design(sprite((1,6),gem))", "__level_design(sprite((3,6),wall))", "__level_design(sprite((4,6),wall))", "__level_design(sprite((5,6),wall))", "__level_design(sprite((0,7),wall))", "__level_design(sprite((1,7),wall))", "__level_design(sprite((4,7),wall))", "__level_design(sprite((5,7),wall))", "__level_design(sprite((7,7),wall))", "__level_design(sprite((8,7),wall))", "__level_design(sprite((0,8),wall))", "__level_design(sprite((1,8),wall))", "__level_design(sprite((4,8),wall))", "__level_design(sprite((5,8),wall))", "__level_design(sprite((7,8),wall))", "__level_design(sprite((8,8),wall))", "__level_design(sprite((0,9),wall))", "__level_design(sprite((1,9),wall))", "__level_design(sprite((7,9),wall))", "__level_design(sprite((8,9),wall))", "tile((0,0))", "tile((1,0))", "tile((2,0))", "tile((3,0))", "tile((4,0))", "tile((5,0))", "tile((6,0))", "tile((7,0))", "tile((8,0))", "tile((9,0))", "tile((0,1))", "tile((1,1))", "tile((2,1))", "tile((3,1))", "tile((4,1))", "tile((5,1))", "tile((6,1))", "tile((7,1))", "tile((8,1))", "tile((9,1))", "tile((0,2))", "tile((1,2))", "tile((2,2))", "tile((3,2))", "tile((4,2))", "tile((5,2))", "tile((6,2))", "tile((7,2))", "tile((8,2))", "tile((9,2))", "tile((0,3))", "tile((1,3))", "tile((2,3))", "tile((3,3))", "tile((4,3))", "tile((5,3))", "tile((6,3))", "tile((7,3))", "tile((8,3))", "tile((9,3))", "tile((0,4))", "tile((1,4))", "tile((2,4))", "tile((3,4))", "tile((4,4))", "tile((5,4))", "tile((6,4))", "tile((7,4))", "tile((8,4))", "tile((9,4))", "tile((0,5))", "tile((1,5))", "tile((2,5))", "tile((3,5))", "tile((4,5))", "tile((5,5))", "tile((6,5))", "tile((7,5))", "tile((8,5))", "tile((9,5))", "tile((0,6))", "tile((1,6))", "tile((2,6))", "tile((3,6))", "tile((4,6))", "tile((5,6))", "tile((6,6))", "tile((7,6))", "tile((8,6))", "tile((9,6))", "tile((0,7))", "tile((1,7))", "tile((2,7))", "tile((3,7))", "tile((4,7))", "tile((5,7))", "tile((6,7))", "tile((7,7))", "tile((8,7))", "tile((9,7))", "tile((0,8))", "tile((1,8))", "tile((2,8))", "tile((3,8))", "tile((4,8))", "tile((5,8))", "tile((6,8))", "tile((7,8))", "tile((8,8))", "tile((9,8))", "tile((0,9))", "tile((1,9))", "tile((2,9))", "tile((3,9))", "tile((4,9))", "tile((5,9))", "tile((6,9))", "tile((7,9))", "tile((8,9))", "tile((9,9))", "sprite((1,0),wall)", "sprite((2,0),wall)", "sprite((8,0),wall)", "sprite((9,0),wall)", "sprite((1,1),wall)", "sprite((2,1),wall)", "sprite((5,1),altar)", "sprite((8,1),wall)", "sprite((9,1),wall)", "sprite((1,2),trap)", "sprite((2,2),trap)", "sprite((7,2),wall)", "sprite((8,2),wall)", "sprite((9,2),wall)", "sprite((0,3),wall)", "sprite((1,3),wall)", "sprite((2,3),wall)", "sprite((3,3),wall)", "sprite((4,3),wall)", "sprite((6,3),wall)", "sprite((7,3),wall)", "sprite((0,4),wall)", "sprite((1,4),wall)", "sprite((2,4),wall)", "sprite((3,4),wall)", "sprite((4,4),wall)", "sprite((6,4),wall)", "sprite((7,4),wall)", "sprite((0,5),wall)", "sprite((1,5),wall)", "sprite((2,5),wall)", "sprite((3,5),wall)", "sprite((4,5),wall)", "sprite((0,6),wall)", "sprite((1,6),gem)", "sprite((3,6),wall)", "sprite((4,6),wall)", "sprite((5,6),wall)", "sprite((0,7),wall)", "sprite((1,7),wall)", "sprite((4,7),wall)", "sprite((5,7),wall)", "sprite((7,7),wall)", "sprite((8,7),wall)", "sprite((0,8),wall)", "sprite((1,8),wall)", "sprite((4,8),wall)", "sprite((5,8),wall)", "sprite((7,8),wall)", "sprite((8,8),wall)", "sprite((0,9),wall)", "sprite((1,9),wall)", "sprite((7,9),wall)", "sprite((8,9),wall)", "touch((0,0),1)", "touch((0,1),1)", "touch((0,2),1)", "touch((3,0),1)", "touch((1,2),1)", "touch((3,0),3)", "touch((4,0),1)", "touch((3,1),1)", "touch((2,2),1)", "touch((4,0),3)", "touch((3,1),3)", "touch((4,1),1)", "touch((3,2),1)", "touch((5,0),3)", "touch((4,1),3)", "touch((3,2),3)", "touch((4,2),1)", "touch((5,1),2)", "touch((6,0),3)", "touch((4,2),3)", "touch((5,2),1)", "touch((1,6),1)", "touch((5,2),2)", "touch((7,0),3)", "touch((6,1),3)", "touch((5,2),3)", "touch((5,3),1)", "touch((2,6),1)", "touch((5,3),2)", "touch((2,6),2)", "touch((7,1),3)", "touch((6,2),3)", "touch((5,3),3)", "touch((5,4),1)", "touch((2,7),1)", "touch((5,4),2)", "touch((2,7),2)", "touch((5,4),3)", "touch((5,5),1)", "touch((3,7),1)", "touch((2,8),1)", "touch((5,5),2)", "touch((2,8),2)", "touch((5,5),3)", "touch((8,3),1)", "touch((6,5),1)", "touch((3,8),1)", "touch((2,9),1)", "touch((6,5),2)", "touch((3,8),2)", "touch((6,5),3)", "touch((9,3),1)", "touch((8,4),1)", "touch((7,5),1)", "touch((6,6),1)", "touch((3,9),1)", "touch((6,6),2)", "touch((3,9),2)", "touch((7,5),3)", "touch((6,6),3)", "touch((9,4),1)", "touch((8,5),1)", "touch((7,6),1)", "touch((6,7),1)", "touch((4,9),1)", "touch((6,7),2)", "touch((4,9),2)", "touch((8,5),3)", "touch((7,6),3)", "touch((9,5),1)", "touch((8,6),1)", "touch((6,8),1)", "touch((5,9),1)", "touch((6,8),2)", "touch((5,9),2)", "touch((8,6),3)", "touch((9,6),1)", "touch((6,9),1)", "touch((6,9),2)", "touch((9,6),3)", "touch((9,7),3)", "touch((9,8),3)", "touch((9,9),3)"
          ]
        }
      ]
    }
  ],
  "Result": "SATISFIABLE",
  "Models": {
    "Number": 1,
    "More": "yes"
  },
  "Calls": 1,
  "Time": {
    "Total": 32.533,
    "Solve": 30.447,
    "Model": 30.445,
    "Unsat": 0.000,
    "CPU": 123.420
  },
  "Threads": 4,
  "Winner": 2
}
